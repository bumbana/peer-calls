# This workflow will do a clean install of node and go dependencies, and run the CI scripts

name: Peer Calls CI

on:
  push:
    branches: [bumbana]
  pull_request:
    branches: [bumbana]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: make lint
  nodejs:
    needs:
    - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["14.x"]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run ci
    - name: Upload client-side artifacts
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: build
  go:
    runs-on: ubuntu-latest
    needs:
    - lint
    strategy:
      matrix:
        go-version: ["1.16.3"]
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@v2
    - name: Use Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2.1.3
      with:
        go-version: ${{ matrix.go-version }}
    - run: touch build/index.js build/style.css
    - run: go test ./... -race -coverprofile=coverage.out -v
    - run: go tool cover -func=coverage.out
  build:
    runs-on: ubuntu-latest
    needs:
      - nodejs
      - go
    strategy:
      matrix:
        go-version: ["1.16.3"]
    steps:
    - name: Use Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2.1.3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v2
    - name: Download client-side artifacts
      uses: actions/download-artifact@v1
      with:
        name: build
    - run: find build/
    - run: mkdir -p build/release
    - run: echo "git_describe=$(cat version.txt)" >> $GITHUB_ENV
    - run: echo $git_describe
    - run: export GOOS=linux GOARCH=amd64; go build -ldflags "-X main.GitDescribe=$git_describe" -o build/release/peercalls.$GOOS.$GOARCH main.go
    - run: export GOOS=linux GOARCH=arm; go build -ldflags "-X main.GitDescribe=$git_describe" -o build/release/peercalls.$GOOS.$GOARCH main.go

  build-and-push-image:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
